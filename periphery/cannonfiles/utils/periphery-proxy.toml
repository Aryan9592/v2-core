# owner is required and must be overridden
[setting.owner]
description = "Admin user for the protocol"

# Deploys an initial Periphery Proxy so that a new Periphery Proxy is not 
# re-deployed every time we deploy a new router. Implementation is
# then upgraded to the correct Router implementation in the
# invoke.upgrade_periphery_proxy command below.
[contract.InitialPeripheryProxy]
artifact = "PeripheryProxy"
args = ["<%= contracts.OwnerUpgradeModule.address %>", "<%= settings.owner %>"]
abiOf = ["OwnerUpgradeModule"]
salt = "<%= settings.salt %>"
create2 = true
depends = ["contract.OwnerUpgradeModule"]

# Upgrades implementation of Periphery Proxy to point to the new 
# router implementation.
[invoke.upgrade_periphery_proxy]
target = ["InitialPeripheryProxy"]
abi = "UpgradeModule"
from = "<%= settings.owner %>"
func = "upgradeTo"
args = ["<%= contracts.PeripheryRouter.address %>"]
factory.PeripheryProxy.abiOf = ["PeripheryRouter"]
factory.PeripheryProxy.event = "Upgraded"
factory.PeripheryProxy.arg = 0
depends = [
  "contract.InitialPeripheryProxy",
  "router.PeripheryRouter"
]